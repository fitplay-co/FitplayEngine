"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
exports.__esModule = true;
exports.Ground = void 0;
var flatbuffers = require("/Users/nixiaofeng/develop/feature/os_dev_docker/app/src/wasm/flatbuffers/flatbuffers.js");
var Ground = /** @class */ (function () {
    function Ground() {
        this.bb = null;
        this.bb_pos = 0;
    }
    Ground.prototype.__init = function (i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    };
    Ground.getRootAsGround = function (bb, obj) {
        return (obj || new Ground()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    Ground.getSizePrefixedRootAsGround = function (bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new Ground()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    Ground.prototype.x = function () {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
    };
    Ground.prototype.y = function () {
        var offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
    };
    Ground.prototype.z = function () {
        var offset = this.bb.__offset(this.bb_pos, 8);
        return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
    };
    Ground.prototype.legLength = function () {
        var offset = this.bb.__offset(this.bb_pos, 10);
        return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
    };
    Ground.prototype.tracing = function () {
        var offset = this.bb.__offset(this.bb_pos, 12);
        return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
    };
    Ground.startGround = function (builder) {
        builder.startObject(5);
    };
    Ground.addX = function (builder, x) {
        builder.addFieldFloat32(0, x, 0.0);
    };
    Ground.addY = function (builder, y) {
        builder.addFieldFloat32(1, y, 0.0);
    };
    Ground.addZ = function (builder, z) {
        builder.addFieldFloat32(2, z, 0.0);
    };
    Ground.addLegLength = function (builder, legLength) {
        builder.addFieldFloat32(3, legLength, 0.0);
    };
    Ground.addTracing = function (builder, tracing) {
        builder.addFieldFloat32(4, tracing, 0.0);
    };
    Ground.endGround = function (builder) {
        var offset = builder.endObject();
        return offset;
    };
    Ground.createGround = function (builder, x, y, z, legLength, tracing) {
        Ground.startGround(builder);
        Ground.addX(builder, x);
        Ground.addY(builder, y);
        Ground.addZ(builder, z);
        Ground.addLegLength(builder, legLength);
        Ground.addTracing(builder, tracing);
        return Ground.endGround(builder);
    };
    return Ground;
}());
exports.Ground = Ground;
