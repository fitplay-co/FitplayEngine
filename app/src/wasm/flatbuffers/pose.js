"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
exports.__esModule = true;
exports.Pose = void 0;
var flatbuffers = require("./flatbuffers.js");
var point_1 = require("./point");
var Pose = /** @class */ (function () {
    function Pose() {
        this.bb = null;
        this.bb_pos = 0;
    }
    Pose.prototype.__init = function (i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    };
    Pose.getRootAsPose = function (bb, obj) {
        return (obj || new Pose()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    Pose.getSizePrefixedRootAsPose = function (bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new Pose()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    Pose.prototype.keypoints = function (index, obj) {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? (obj || new point_1.Point()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
    };
    Pose.prototype.keypointsLength = function () {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
    };
    Pose.prototype.keypoints3D = function (index, obj) {
        var offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? (obj || new point_1.Point()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
    };
    Pose.prototype.keypoints3DLength = function () {
        var offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
    };
    Pose.startPose = function (builder) {
        builder.startObject(2);
    };
    Pose.addKeypoints = function (builder, keypointsOffset) {
        builder.addFieldOffset(0, keypointsOffset, 0);
    };
    Pose.createKeypointsVector = function (builder, data) {
        builder.startVector(4, data.length, 4);
        for (var i = data.length - 1; i >= 0; i--) {
            builder.addOffset(data[i]);
        }
        return builder.endVector();
    };
    Pose.startKeypointsVector = function (builder, numElems) {
        builder.startVector(4, numElems, 4);
    };
    Pose.addKeypoints3D = function (builder, keypoints3DOffset) {
        builder.addFieldOffset(1, keypoints3DOffset, 0);
    };
    Pose.createKeypoints3DVector = function (builder, data) {
        builder.startVector(4, data.length, 4);
        for (var i = data.length - 1; i >= 0; i--) {
            builder.addOffset(data[i]);
        }
        return builder.endVector();
    };
    Pose.startKeypoints3DVector = function (builder, numElems) {
        builder.startVector(4, numElems, 4);
    };
    Pose.endPose = function (builder) {
        var offset = builder.endObject();
        return offset;
    };
    Pose.finishPoseBuffer = function (builder, offset) {
        builder.finish(offset);
    };
    Pose.finishSizePrefixedPoseBuffer = function (builder, offset) {
        builder.finish(offset, undefined, true);
    };
    Pose.createPose = function (builder, keypointsOffset, keypoints3DOffset) {
        Pose.startPose(builder);
        Pose.addKeypoints(builder, keypointsOffset);
        Pose.addKeypoints3D(builder, keypoints3DOffset);
        return Pose.endPose(builder);
    };
    return Pose;
}());
exports.Pose = Pose;
